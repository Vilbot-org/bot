name: Deployment

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  avoid_redundancy:
    runs-on: ubuntu-latest
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ github.token }}

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          cache: 'npm'
          node-version: '20.10'
      - name: Install dependencies
        run: npm ci
      - name: Lint
        run: npm run eslint

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          cache: 'npm'
          node-version: '20.10'
      - name: Install dependencies
        run: npm ci
      - name: Test
        run: npm run test

  build:
    needs: [lint, test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          cache: 'npm'
          node-version: '20.10'
      - name: Install dependencies
        run: npm ci
      - name: Build
        run: npm run build
      - name: Archive production artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist

  build_docker_image:
    needs: [lint, test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Get the current release version
        id: get_version
        run: echo "RELEASE_VERSION=$(git describe --tags --abbrev=0)" >> $GITHUB_ENV
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: gfrancv/vilbot:latest

  deploy_commands:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          cache: 'npm'
          node-version: '20.10'
      - uses: actions/download-artifact@v4.1.7
        with:
          name: dist
          path: dist
      - name: Make envfile
        uses: SpicyPizza/create-envfile@v2.0
        with:
          envkey_APP_NAME: vilbot
          envkey_APP_ENV: deploy
          envkey_DISCORD_TOKEN: ${{ secrets.DISCORD_TOKEN }}
          envkey_CLIENT_ID: ${{ vars.CLIENT_ID }}
          envkey_JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
          envkey_DB_NAME: undefined
          envkey_DB_URI: mongodb://mongoDB/vilbot_db
          envkey_GUILD_ID: 12345
          envkey_SOCKET_URL: mongodb://mongoDB/vilbot_db
          fail_on_empty: true
      - name: Install dependencies
        run: npm ci --omit=dev
      - name: Deploy commands
        run: npm run deploy:commands

  deploy:
    needs: [build_docker_image]
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Make envfile
        uses: SpicyPizza/create-envfile@v2.0
        with:
          envkey_APP_NAME: vilbot
          envkey_APP_ENV: production
          envkey_DISCORD_TOKEN: ${{ secrets.DISCORD_TOKEN }}
          envkey_CLIENT_ID: ${{ vars.CLIENT_ID }}
          envkey_DB_URI: ${{ secrets.DB_URI }}
          envkey_DB_NAME: ${{ secrets.DB_NAME }}
          envkey_SOCKET_URL: ${{ secrets.SOCKET_URL }}
          envkey_GUILD_ID: ${{ vars.GUILD_ID }}
          envkey_JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
          envkey_DASHBOARD_DB_USERNAME: ${{ secrets.DASHBOARD_DB_USERNAME }}
          envkey_DASHBOARD_DB_PASSWORD: ${{ secrets.DASHBOARD_DB_PASSWORD }}
          envkey_DOCKER_PERSIST_PATH: ${{ vars.DOCKER_PERSIST_PATH }}
          fail_on_empty: true
      - name: Exec deploy.sh script
        run: ./deploy.sh
